name: Push - Validate, Build and Release

permissions:
  actions: write
  checks: write
  contents: write

on:
  push:
    branches:
      - develop

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:

  pre-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: pre-commit
        uses: Alfresco/alfresco-build-tools/.github/actions/pre-commit@a96753d4d1c98384249ea8370b5d605866b63e1e # v8.8.0
        with:
          skip_checkout: true
      - name: Ensure SHA pinned actions
        uses: zgosalvez/github-actions-ensure-sha-pinned-actions@5d6ac37a4cef8b8df67f482a8e384987766f0213 # v3.0.17

  build:
    runs-on: ubuntu-latest
    needs: pre-checks
    steps:

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup Java JDK 21
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # 4.5.0
        with:
          java-version: 21
          distribution: 'temurin'

      - uses: Alfresco/alfresco-build-tools/.github/actions/update-pom-to-next-pre-release@a96753d4d1c98384249ea8370b5d605866b63e1e # v8.8.0
        id: update-pom-to-next-version

      - name: Update VERSION file
        run: |
          echo ${{steps.update-pom-to-next-version.outputs.next-prerelease}} > VERSION

      - name: Set VERSION env variable
        run: |
          VERSION=$(cat VERSION)
          echo set VERSION=$VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and Test with Maven (and maybe Deploy)
        shell: bash
        run: mvn deploy ${{ env.MAVEN_CLI_OPTS}}
        env:
          MAVEN_CLI_OPTS: --show-version --no-transfer-progress --settings settings.xml
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Echo Longest Test Run
        uses: ./.github/actions/echo-longest-run

      - name: Configure git user
        run: |
          git config --global user.name $GITHUB_USERNAME
          git config --global user.email $GITHUB_USERNAME@users.noreply.github.com
        env:
          GITHUB_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}

      - name: Create release tag
        run: |
          git commit -am "Release $VERSION" --allow-empty
          git tag -fa $VERSION -m "Release version $VERSION"
          git push -f -q origin $VERSION

      - name: Get branch name
        uses: Alfresco/alfresco-build-tools/.github/actions/get-branch-name@a96753d4d1c98384249ea8370b5d605866b63e1e # v8.8.0

      - name: Propagate
        uses: Alfresco/alfresco-build-tools/.github/actions/jx-updatebot-pr@a96753d4d1c98384249ea8370b5d605866b63e1e # v8.8.0
        if: ${{ env.BRANCH_NAME == 'develop' }}
        env:
          DEVELOPMENT_BRANCH: ${{ github.ref_name }}
        with:
          version: ${{ env.VERSION }}
          auto-merge: 'true'
          labels: ${{ env.DEVELOPMENT_BRANCH }}
          base-branch-name: ${{ env.DEVELOPMENT_BRANCH }}
          git-username: ${{ secrets.BOT_GITHUB_USERNAME }}
          git-token: ${{ secrets.BOT_GITHUB_TOKEN }}
          git-author-name: ${{ secrets.BOT_GITHUB_USERNAME }}

  notify:
    runs-on: ubuntu-latest
    needs: build
    if: always() && failure()
    steps:
      - name: Teams Notification
        uses: Alfresco/alfresco-build-tools/.github/actions/send-teams-notification@a96753d4d1c98384249ea8370b5d605866b63e1e # v8.8.0
        with:
          webhook-url: ${{ secrets.TEAMS_NOTIFICATION_WEBHOOK }}
